---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { getImage } from 'astro:assets';

type ImageMetadata = Awaited<ReturnType<typeof getImage>>;
export interface Props {
	title: string;
	description: string;
	image?: string | ImageMetadata;
	ogType?: string;
	tags?: string[];
	canonicalURL?: string;
}

const { title, description, image: rawImage = '/social_img.webp', ogType = 'website', tags = [], canonicalURL } = Astro.props;

const defaultKeywords = 'software engineering, web development, javascript, ruby, python, ruby on rails, css, sql, postgresql, mysql, git, macos';
const image = typeof rawImage === 'string' ? rawImage : rawImage.src;
const keywords = [...new Set([...defaultKeywords.split(', '), ...tags])].join(', ');
const finalCanonicalURL = canonicalURL || Astro.url;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.png" />
<meta name="generator" content={Astro.generator} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="keywords" content={keywords} />
<link rel="canonical" href={finalCanonicalURL} />
<meta name="robots" content="index, follow" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={ogType} />
<meta property="og:url" content={finalCanonicalURL} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image, Astro.url)} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={finalCanonicalURL} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image, Astro.url)} />

<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-281ZFHTN30"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-281ZFHTN30');
</script>
