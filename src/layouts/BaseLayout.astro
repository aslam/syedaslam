---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SideBar from "../components/SideBar.astro";
import { ViewTransitions } from "astro:transitions";
import type { getImage } from "astro:assets";

import { SITE_TITLE, SITE_DESCRIPTION, TRANSITION_API } from "../config";

type ImageMetadata = Awaited<ReturnType<typeof getImage>>;

export interface Props {
  title?: string;
  description?: string;
  image?: string | ImageMetadata;
  ogType?: string;
  tags?: string[];
  includeSidebar?: boolean;
  canonicalURL?: string;
}

const {
  image,
  title = SITE_TITLE,
  description = SITE_DESCRIPTION,
  includeSidebar = true,
  ogType,
  tags = [],
} = Astro.props;
---

<!DOCTYPE html>
<html lang="en" data-theme="light">
  <head>
    <BaseHead title={title} description={description} image={image} ogType={ogType} tags={tags} />
    {TRANSITION_API && <ViewTransitions />}
  </head>
  <body>
    <div class="bg-base-100 drawer lg:drawer-open">
      <input id="my-drawer" type="checkbox" class="drawer-toggle" />
      <div class="drawer-content bg-base-100 lg:ml-[19rem]">
        <Header title={SITE_TITLE} />
        <div class="md:flex md:justify-center">
          <main class="p-6 pt-10 lg:max-w-[900px] max-w-[100vw]">
            <slot />
          </main>
        </div>
        <Footer />
      </div>
      {includeSidebar && <SideBar />}
    </div>
    
    <!-- Custom CSS for drawer layout -->
    <style>
      /* Ensure drawer layout works properly */
      .drawer {
        position: relative;
      }

      .drawer-side {
        position: fixed !important;
        top: 0 !important;
        left: 0 !important;
        height: 100vh !important;
        z-index: 40 !important;
      }

      .drawer-content {
        min-height: 100vh;
      }

      /* Ensure sidebar is visible on desktop */
      @media (min-width: 1024px) {
        .drawer.lg\:drawer-open .drawer-side {
          position: fixed !important;
          left: 0 !important;
        }
        
        .drawer.lg\:drawer-open .drawer-content {
          margin-left: 19rem !important; /* w-[19rem] */
        }
      }
    </style>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('a[href^="http"]').forEach(a => {
          const anchor = a as HTMLAnchorElement;
          if (anchor.host !== location.host) {
            anchor.setAttribute('target', '_blank');
            anchor.setAttribute('rel', 'noopener noreferrer');
          }
        });
      });
    </script>
  </body>
</html>
